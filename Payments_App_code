import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

class User {
    String mobileNumber;
    int pin;
    double balance;

    User(String mobileNumber, int pin, double balance) {
        this.mobileNumber = mobileNumber;
        this.pin = pin;
        this.balance = 0.0;
    }
}

public class UPIApp {
    private static Map<String, User> users = new HashMap<>();
    private static Map<String, Double> transactionHistory = new HashMap<>();
    private static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        while (true) {
            System.out.println("1. Deposit Money");
            System.out.println("2. Withdraw Money");
            System.out.println("3. Display Wallet Balance");
            System.out.println("4. Send Money");
            System.out.println("5. Transaction History");
            System.out.println("6. Register");
            System.out.println("7. Exit");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); 

            switch (choice) {
                case 1:
                    depositMoney();
                    break;
                case 2:
                    withdrawMoney();
                    break;
                case 3:
                    displayBalance();
                    break;
                case 4:
                    sendMoney();
                    break;
                case 5:
                    displayTransactionHistory();
                    break;
                case 6: registerUser();
                break;
                case 7:
                    System.out.println("Exiting UPI App. Thank you!");
                    System.exit(0);
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }

   
private static void registerUser() {
    System.out.print("Enter your mobile number: ");
    String mobileNumber = scanner.nextLine();

    System.out.print("Enter 4-digit PIN: ");
    int pin = scanner.nextInt();
    scanner.nextLine(); 
 
    
    System.out.print("Enter initial balance: ");
    double balance = scanner.nextDouble();
    scanner.nextLine(); // Consume the newline character
   

    User user = new User(mobileNumber, pin, balance);
    users.put(mobileNumber, user);

    System.out.println("User registered successfully.");
}


    private static void depositMoney() {
        System.out.print("Enter your mobile number: ");
        String mobileNumber = scanner.nextLine();

        if (users.containsKey(mobileNumber)) {
            System.out.print("Enter amount to deposit: ");
            double amount = scanner.nextDouble();
            scanner.nextLine(); 

            User user = users.get(mobileNumber);
            user.balance += amount;

            System.out.println("Deposit successful. Updated balance: " + user.balance);
        } else {
            System.out.println("User not found. Please register first.");
        }
    }

    private static void withdrawMoney() {
        System.out.print("Enter your mobile number: ");
        String mobileNumber = scanner.nextLine();

        if (users.containsKey(mobileNumber)) {
            System.out.print("Enter amount to withdraw: ");
            double amount = scanner.nextDouble();
            scanner.nextLine(); 

            User user = users.get(mobileNumber);
            if (amount <= user.balance) {
                user.balance -= amount;
                System.out.println("Withdrawal successful. Updated balance: " + user.balance);
            } else {
                System.out.println("Insufficient funds.");
            }
        } else {
            System.out.println("User not found. Please register first.");
        }
    }

    private static void displayBalance() {
        System.out.print("Enter your mobile number: ");
        String mobileNumber = scanner.nextLine();

        if (users.containsKey(mobileNumber)) {
            User user = users.get(mobileNumber);
            System.out.println("Wallet Balance: " + user.balance);
        } else {
            System.out.println("User not found. Please register first.");
        }
    }

    private static void sendMoney() {
        System.out.print("Enter your mobile number: ");
        String senderMobileNumber = scanner.nextLine();
    
        if (users.containsKey(senderMobileNumber)) {
            System.out.print("Enter recipient's mobile number: ");
            String recipientMobileNumber = scanner.nextLine();
    
            if (!users.containsKey(recipientMobileNumber)) {
                System.out.println("Recipient not found. Registering recipient...");
    
                System.out.print("Enter 4-digit PIN for the recipient: ");
                int recipientPin = scanner.nextInt();
                scanner.nextLine(); 
                System.out.print("Enter initial balance for the recipient: ");
                double recipientBalance = scanner.nextDouble();
                scanner.nextLine(); 
    
                User recipient = new User(recipientMobileNumber, recipientPin, recipientBalance);
                users.put(recipientMobileNumber, recipient);
    
                System.out.println("Recipient registered successfully.");
            }
    
            System.out.print("Enter 4-digit PIN: ");
            int pin = scanner.nextInt();
            scanner.nextLine(); 
    
            User sender = users.get(senderMobileNumber);
            if (pin == sender.pin) {
                System.out.print("Enter amount to send: ");
                double amount = scanner.nextDouble();
                scanner.nextLine(); 
    
                if (amount <= sender.balance) {
                    User recipient = users.get(recipientMobileNumber);
                    recipient.balance += amount;
                    sender.balance -= amount;
    
                    String transactionKey = senderMobileNumber + "->" + recipientMobileNumber;
                    transactionHistory.put(transactionKey, amount);
    
                    System.out.println(amount + "Rs sent successfully to "+ recipientMobileNumber);
                    System.out.println("Payment successful!");
                } else {
                    System.out.println("Insufficient funds.");
                }
            } else {
                System.out.println("Incorrect PIN. Money not sent.");
            }
        } else {
            System.out.println("User not found. Please register first.");
        }
    }
    

    private static void displayTransactionHistory() {
        System.out.print("Enter your mobile number: ");
        String mobileNumber = scanner.nextLine();

        if (users.containsKey(mobileNumber)) {
            System.out.println("Transaction History:");

            for (Map.Entry<String, Double> entry : transactionHistory.entrySet()) {
                String[] usersInvolved = entry.getKey().split("->");
                if (usersInvolved[0].equals(mobileNumber) || usersInvolved[1].equals(mobileNumber)) {
                    System.out.println(usersInvolved[0] + " to " + usersInvolved[1] + ": " + entry.getValue());
                }
            }
        } else {
            System.out.println("User not found. Please register first.");
        }
    }
}
